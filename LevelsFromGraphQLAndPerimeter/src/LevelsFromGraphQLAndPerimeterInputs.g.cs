// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace LevelsFromGraphQLAndPerimeter
{
    public class LevelsFromGraphQLAndPerimeterInputs: S3Args
    {
		/// <summary>
		/// The connection information
		/// The system will set this property to the data's path on disk.
		/// </summary>
		[JsonProperty("Connection")]
		[JsonConverter(typeof(StringToInputDataConverter))]
		public InputData Connection {get; internal set;}

		/// <summary>
		/// Perimeter of the Levels.
		/// </summary>
		[JsonProperty("Perimeter")]
		public Elements.Geometry.Polygon Perimeter {get;}


        
        /// <summary>
        /// Construct a LevelsFromGraphQLAndPerimeterInputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public LevelsFromGraphQLAndPerimeterInputs() : base()
        {
			this.Connection = new InputData("default_input.json");
			this.Perimeter = Elements.Geometry.Polygon.Rectangle(1, 1);

        }


        /// <summary>
        /// Construct a LevelsFromGraphQLAndPerimeterInputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public LevelsFromGraphQLAndPerimeterInputs(InputData connection, Elements.Geometry.Polygon perimeter, string bucketName, string uploadsBucket, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey): base(bucketName, uploadsBucket, modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
			this.Connection = connection;
			this.Perimeter = perimeter;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}